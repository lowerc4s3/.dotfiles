return {
    {
        -- Code action menu
        -- (disabled and replaced with tiny-code-action)
        'weilbith/nvim-code-action-menu',
        cmd = 'CodeActionMenu',
        enabled = false,
        init = function()
            vim.g.code_action_menu_show_details = false
            vim.g.code_action_menu_show_diff = false
            vim.g.code_action_menu_window_border = 'solid'
        end
    },

    {
        -- Tree-like view for symbols
        'simrat39/symbols-outline.nvim',
        enabled = false,
        cmd = 'SymbolsOutline',
        opts = {
            width = 33,
            symbols = {
                File = { icon = "Ó≠†", hl = "@text.uri" },
                Module = { icon = "Ó¨©", hl = "@namespace" },
                Namespace = { icon = "Ó™ã", hl = "@namespace" },
                Package = { icon = "Ó¨©", hl = "@namespace" },
                Class = { icon = "Ó≠õ", hl = "@type" },
                Method = { icon = "Ó™å", hl = "@method" },
                Property = { icon = "Ó≠•", hl = "@method" },
                Field = { icon = "Ó≠ü", hl = "@field" },
                Constructor = { icon = "Ó≠£", hl = "@constructor" },
                Enum = { icon = "Ó™ï", hl = "@type" },
                Interface = { icon = "Ó≠°", hl = "@type" },
                Function = { icon = "Ó™å", hl = "@function" },
                Variable = { icon = "Ó™à", hl = "@constant" },
                Constant = { icon = "Ó≠ù", hl = "@constant" },
                String = { icon = "Ó≠©", hl = "@string" },
                Number = { icon = "Û∞é†", hl = "@number" },
                Boolean = { icon = "Ó™è", hl = "@boolean" },
                Array = { icon = "Ó™ä", hl = "@constant" },
                Object = { icon = "‚¶ø", hl = "@type" },
                Key = { icon = "Û∞åÜ", hl = "@type" },
                Null = { icon = "Ôë®", hl = "@type" },
                EnumMember = { icon = "Ó≠û", hl = "@field" },
                Struct = { icon = "Ó™ë", hl = "@type" },
                Event = { icon = "Ó™Ü", hl = "@type" },
                Operator = { icon = "Ó≠§", hl = "@operator" },
                TypeParameter = { icon = "ùôè", hl = "@parameter" },
                Component = { icon = "Û∞Ö¥", hl = "@function" },
                Fragment = { icon = "Û∞Ö¥", hl = "@constant" },
            },
        }
    }
}
